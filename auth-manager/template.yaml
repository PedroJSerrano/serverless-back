AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'serverless-fullstack-app - auth-manager'
Parameters:
  ApiId:
    Type: String
    Default: !ImportValue "serverless-fullstack-app-ApiId"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups: []

Globals:
  Function:
    Runtime: java21
    MemorySize: 512
    Timeout: 30
    Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
    Tags:
      awsApplication: serverless-fullstack-app
      Environment: dev
      Owner: pjserrano
      Module: auth-manager

Resources:
  AuthManagerAssociation:
    Type: AWS::ServiceCatalogAppRegistry::ResourceAssociation
    Properties:
      Application: serverless-fullstack-app
      Resource: !Ref AWS::StackId
      ResourceType: CFN_STACK
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: auth-manager-login
      Tags:
        awsApplication: serverless-fullstack-app
        Module: auth-manager
      CodeUri: .
      Architectures:
        - x86_64
      SnapStart:
        ApplyOn: PublishedVersions
      AutoPublishAlias: live
      Events:
        LoginApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref ServerlessHttpApi  # En lugar de !Ref ApiId
            Path: /login
            Method: POST
      Environment:
        Variables:
          MAIN_CLASS: pjserrano.authmanager.AuthManagerConfiguration
          SPRING_CLOUD_FUNCTION_DEFINITION: login
          JWT_EXPIRATION: "3600000"
          SPRING_CLOUD_AWS_REGION_STATIC: !Ref AWS::Region
          JAVA_TOOL_OPTIONS: "-XX:+UseSerialGC -Xmx512m -XX:+TieredCompilation -XX:TieredStopAtLevel=1"
          SPRING_JMX_ENABLED: false
          SPRING_MAIN_BANNER_MODE: "off"
      Policies:
        - Statement:
            - Sid: SSMGetParameterPolicy
              Effect: Allow
              Action:
                - "ssm:GetParameter"
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/login/jwt/secret"
        - Statement:
            - Sid: DynamoDBReadOnlyPolicy
              Effect: Allow
              Action:
                - "dynamodb:GetItem"
              Resource: !ImportValue "serverless-fullstack-app-UsersTableArn"
  ServerlessHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      Tags:
        awsApplication: serverless-fullstack-app
        Module: auth-manager
Outputs:
  LoginApiUrl:
    Description: "API Gateway endpoint URL for Login Function"
    Value: !Sub
      - "${ApiUrl}/login"
      - ApiUrl: !ImportValue "serverless-fullstack-app-ApiUrl"
  LoginFunctionArn:
    Description: "ARN de la funci√≥n Login"
    Value: !GetAtt LoginFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LoginFunctionArn"